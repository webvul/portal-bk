package com.kii.extension.ruleengine.drools.rule

import com.kii.extension.ruleengine.drools.entity.*;



rule "copy  all unit summary value to multipleMap"
  no-loop true
when
	Trigger(type ==TriggerType.multiple , $triggerID:triggerID)
	$summary:SummaryResult(triggerID==$triggerID)
	$multipleMap:MultiplesValueMap(trigger==$triggerID)
then
	modify($multipleMap){
    	setSummaryValue($summary);
    };
    System.out.println("compute  summary value :"+$map.getValues()+" to multiple map ");
end


rule "compute the summary of  fieldName value: funName"
when
	$trigger:Trigger,type==TriggerType.multiple,$triggerID:triggerID)
	$summary:Summary(triggerID==$triggerID, funName=="sum" ,$name:name)
	Group(triggerID==$triggerID&&name==$name,$things:things)
	CurrThing(thing memberOf $things|| init == true)
	accumulate( $status : MemberMatchResult(thingID memberOf $things);
                    $sum : sum($status.getSafeValue($summary.getFieldName()))
                  )
then
	System.out.println("compute  sum summary "+$sum);
	insert(new SummaryResult($triggerID,$name,$sum));
end

/*
rule "compute the count of  fieldName value: funName"
when
	$trigger:Trigger((type ==TriggerType.summary||type==TriggerType.multiple),$triggerID:triggerID)
	$summary:Summary(triggerID==$triggerID ,$things:things, funName=="count" ,$name:name )
	CurrThing(thing memberOf $things|| init == true)
	accumulate( $thingStatusInRule : ThingStatusInRule(thingID memberOf $things);
                    $value : count(1)
                    )
then
	System.out.println("compute count summary "+$value);
	insert(new SummaryResult($triggerID,$name,$value));
end


rule "compute the max of  fieldName value: funName"
when
	$trigger:Trigger((type ==TriggerType.summary||type==TriggerType.multiple),$triggerID:triggerID)
	$summary:Summary(triggerID==$triggerID ,$things:things, funName=="max",$name:name )
	CurrThing(thing memberOf $things|| init == true)
	accumulate( $thingStatusInRule : ThingStatusInRule(thingID memberOf $things);
                    $value : max($thingStatusInRule.getNumValue($summary.getFieldName()))
                    )
then
	System.out.println("compute max summary "+$value);
	insert(new SummaryResult($triggerID,$name,$value));
end


rule "compute the min of  fieldName value: funName"
when
	$trigger:Trigger((type ==TriggerType.summary||type==TriggerType.multiple),$triggerID:triggerID)
	$summary:Summary(triggerID==$triggerID ,$things:things, funName=="min" ,$name:name )
	CurrThing(thing memberOf $things|| init == true)
	accumulate( $thingStatusInRule : ThingStatusInRule(thingID memberOf $things);
                    $value : min($thingStatusInRule.getNumValue($summary.getFieldName()))
                    )
then
	System.out.println("compute min summary "+$value);
	insert(new SummaryResult($triggerID,$name,$value));
end


rule "compute the average of  fieldName value: funName"
when
	$trigger:Trigger((type ==TriggerType.summary||type==TriggerType.multiple),$triggerID:triggerID)
	$summary:Summary(triggerID==$triggerID ,$things:things, funName=="average"  ,$name:name)
	CurrThing(thing memberOf $things|| init == true)
	accumulate( $thingStatusInRule : ThingStatusInRule(thingID memberOf $things);
                    $value : average($thingStatusInRule.getNumValue($summary.getFieldName()))
                    )
then
	System.out.println("compute average summary "+$value);
	insert(new SummaryResult($triggerID,$name,$value));
end
*/