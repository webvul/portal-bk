package com.kii.extension.ruleengine.drools.rule

import com.kii.extension.ruleengine.drools.entity.*;


rule "copy  all unit summary value to multipleMap"
  no-loop true
when
	Trigger(type ==TriggerType.multiple , $triggerID:triggerID)
	$map:SummaryValueMap(triggerID==$triggerID)
	$multipleMap:MultiplesValueMap(trigger==$triggerID)
then
	modify($multipleMap){
    	setSummaryMap($map);
    };
    System.out.println("compute  summary value :"+$map.getValues()+" to multiple map ");
end

rule "summary all unit value to multipleMap"
  no-loop true
when
	Trigger(type ==TriggerType.multiple,$triggerID:triggerID)
	$result:UnitResult(triggerID==$triggerID)
	$map:MultiplesValueMap(trigger==$triggerID)
then
	modify($map){
    	setUnitValue($result);
    };
    System.out.println("compute unit result map:"+$map.getValues());
end


rule "Multiples unit custom segment:thing"
when
	Trigger(type ==TriggerType.multiple,$triggerID:triggerID)
    UnitSource ( $unitName:unitName, $triggerID:triggerID, $things:things , ( unitType=="thing"  &&  triggerID==$triggerID ),$stateName:stateName )
    ThingStatusInRule( thingID memberof $things,$result:values[${stateName}]  )
then
	insertLogical(new UnitResult($triggerID,$unitName,$result));
end

