package com.kii.extension.ruleengine.drools.rule

import com.kii.extension.ruleengine.drools.entity.*;


rule "summary all summary value in map"
  no-loop true
when
	Trigger((type ==TriggerType.summary||type==TriggerType.multiple),$triggerID:triggerID)
	$summary:SummaryResult(triggerID==$triggerID)
	$map:SummaryValueMap(triggerID==$triggerID)
then
	modify($map){
    	setSummaryResult($summary);
    };
    System.out.println("compute  summary:"+$map.getValues());
end


rule "compute the summary of  fieldName value: funName"
when
	$trigger:Trigger(type ==TriggerType.summary,$triggerID:triggerID)
	$summary:Summary(triggerID==$triggerID ,$thingIDs:thingIDs, funName=="sum" ,$name:name)
	CurrThing(thing memberOf $thingIDs|| init == true)
	accumulate( $thingStatusInRule : ThingStatusInRule(thingID memberOf $thingIDs);
                    $sum : sum($thingStatusInRule.getNumValue($summary.getFieldName()))
                  )
then
	System.out.println("compute  sum summary "+$sum);
	insert(new SummaryResult($triggerID,$name,$sum));
end


rule "compute the count of  fieldName value: funName"
when
	$trigger:Trigger(type ==TriggerType.summary,$triggerID:triggerID)
	$summary:Summary(triggerID==$triggerID ,$thingIDs:thingIDs, funName=="count" ,$name:name )
	CurrThing(thing memberOf $thingIDs|| init == true)
	accumulate( $thingStatusInRule : ThingStatusInRule(thingID memberOf $thingIDs);
                    $value : count(1)
                    )
then
	System.out.println("compute count summary "+$value);
	insert(new SummaryResult($triggerID,$name,$value));
end


rule "compute the max of  fieldName value: funName"
when
	$trigger:Trigger(type ==TriggerType.summary,$triggerID:triggerID)
	$summary:Summary(triggerID==$triggerID ,$thingIDs:thingIDs, funName=="max",$name:name )
	CurrThing(thing memberOf $thingIDs|| init == true)
	accumulate( $thingStatusInRule : ThingStatusInRule(thingID memberOf $thingIDs);
                    $value : max($thingStatusInRule.getNumValue($summary.getFieldName()))
                    )
then
	System.out.println("compute max summary "+$value);
	insert(new SummaryResult($triggerID,$name,$value));
end


rule "compute the min of  fieldName value: funName"
when
	$trigger:Trigger(type ==TriggerType.summary,$triggerID:triggerID)
	$summary:Summary(triggerID==$triggerID ,$thingIDs:thingIDs, funName=="min" ,$name:name )
	CurrThing(thing memberOf $thingIDs|| init == true)
	accumulate( $thingStatusInRule : ThingStatusInRule(thingID memberOf $thingIDs);
                    $value : min($thingStatusInRule.getNumValue($summary.getFieldName()))
                    )
then
	System.out.println("compute min summary "+$value);
	insert(new SummaryResult($triggerID,$name,$value));
end


rule "compute the average of  fieldName value: funName"
when
	$trigger:Trigger(type ==TriggerType.summary,$triggerID:triggerID)
	$summary:Summary(triggerID==$triggerID ,$thingIDs:thingIDs, funName=="average"  ,$name:name)
	CurrThing(thing memberOf $thingIDs|| init == true)
	accumulate( $thingStatusInRule : ThingStatusInRule(thingID memberOf $thingIDs);
                    $value : average($thingStatusInRule.getNumValue($summary.getFieldName()))
                    )
then
	System.out.println("compute average summary "+$value);
	insert(new SummaryResult($triggerID,$name,$value));
end
