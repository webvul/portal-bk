package com.kii.extension.ruleengine.drools.rule

import com.kii.extension.ruleengine.drools.entity.*;


rule "summary all summary value in map"
  no-loop true
when
	Trigger(type ==TriggerType.summary,$triggerID:triggerID)
	$summary:SummaryResult(triggerID==$triggerID)
	$map:SummaryValueMap(triggerID==$triggerID)
then
	modify($map){
    	setSummaryResult($summary);
    };
    System.out.println("compute  summary:"+$map.getValues());
end


rule "compute the summary of  fieldName value: funName"
when
	$trigger:Trigger(type ==TriggerType.summary,$triggerID:triggerID)
	$summary:Summary(triggerID==$triggerID ,$things:things, funName=="sum" )
	CurrThing(thing memberOf $things|| init == true)
	accumulate( ThingStatusInRule(thingID memberOf $things , $status:values);
                    $sum : sum($status.get($summary.getFieldName()))
                  )
then
	System.out.println("compute  sum summary "+$sum);
	insert(new SummaryResult($triggerID,$summary.getSummaryField(),$sum));
end


rule "compute the count of  fieldName value: funName"
when
	$trigger:Trigger(type ==TriggerType.summary,$triggerID:triggerID)
	$summary:Summary(triggerID==$triggerID ,$things:things, funName=="count" )
	CurrThing(thing memberOf $things|| init == true)
	accumulate( ThingStatusInRule(thingID memberOf $summary.things ,$status:values);
                    $value : count($status)
                    )
then
	System.out.println("compute count summary "+$value);
	insert(new SummaryResult($triggerID,$summary.getSummaryField(),$value));
end


rule "compute the max of  fieldName value: funName"
when
	$trigger:Trigger(type ==TriggerType.summary,$triggerID:triggerID)
	$summary:Summary(triggerID==$triggerID ,$things:things, funName=="max" )
	CurrThing(thing memberOf $things|| init == true)
	accumulate( ThingStatusInRule(thingID memberOf $summary.things ,$status:values);
                    $value : max($status)
                    )
then
	System.out.println("compute max summary "+$value);
	insert(new SummaryResult($triggerID,$summary.getSummaryField(),$value));
end


rule "compute the min of  fieldName value: funName"
when
	$trigger:Trigger(type ==TriggerType.summary,$triggerID:triggerID)
	$summary:Summary(triggerID==$triggerID ,$things:things, funName=="min" )
	CurrThing(thing memberOf $things|| init == true)
	accumulate( ThingStatusInRule(thingID memberOf $summary.things ,$status:values);
                    $value : min($status)
                    )
then
	System.out.println("compute min summary "+$value);
	insert(new SummaryResult($triggerID,$summary.getSummaryField(),$value));
end


rule "compute the average of  fieldName value: funName"
when
	$trigger:Trigger(type ==TriggerType.summary,$triggerID:triggerID)
	$summary:Summary(triggerID==$triggerID ,$things:things, funName=="average" )
	CurrThing(thing memberOf $things|| init == true)
	accumulate( ThingStatusInRule(thingID memberOf $summary.things ,$status:values);
                    $value : average($status)
                    )
then
	System.out.println("compute average summary "+$value);
	insert(new SummaryResult($triggerID,$summary.getSummaryField(),$value));
end
